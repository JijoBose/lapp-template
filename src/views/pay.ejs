<h1 class="display-5 fw-bold text-center">
  Request a payment
</h1>
<p class="lead text-center">
  One API call, endless possibilities. Sell a digital product, create a paywall or stream sats as you scroll the page. ðŸ¤¯
</p>

<p class="text-center">
  <a class="btn btn-primary btn-xxl" href="#" onclick="pay(1000)">
    Request a payment of 1.000 sats
  </a>  
</p>

<div class="modal fade" id="pay" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Pay with Bitcoin</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mx-auto mt-5 text-center">
          <a id="webln-button" href="#" class="d-none btn btn-primary mx-auto" onclick="startWebLN()">Pay in your browser</a>

          <a href="#" id="qr-button" class="btn btn-secondary" onclick="startQr()">
            <i class="bi bi-qr-code"></i>
            Scan a QR code
          </a>  

          <div id="qr-container" class="d-none m-3">
            <a id="qr-link" href="">
              <img id="qr" src="">
            </a>
          </div>
        </div>

      </div>
      <div class="d-none modal-footer justify-content-center">
        <div class="spinner-border m-2 text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          Waiting for your payment
      </div>
    </div>
  </div>
</div>

<div id="react-root">  
</div>

<!-- Load React. -->
<!-- Note: when deploying, replace "development.js" with "production.min.js". -->
<script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>  
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
<script src="/components/payment-dialog.js"></script>

<script>  
  async function fetchInvoice(amount, comment) {
    
    const response = await fetch('/invoice', {
      method: 'POST',
      body: JSON.stringify({
        amount: amount,
        comment: comment,
        
      }),
      headers: {
        "Accept": "application/json",
        "Content-Type": "application/json",
      }
    });

    if(!response.ok) {
      throw new Error(response.error);
    }

    return response.json();
  }
  
  async function pay(amount) {
    
    const payModal = new bootstrap.Modal('#pay');
    payModal.show();
    
    const result = await fetchInvoice(amount);          
    
    if(window.webln) {
      weblnButton.classList.remove('d-none');
    } 
    
    document.querySelector('#pay #qr-container').classList.remove('d-none');
    document.querySelector('#pay #qr-link').href = "lightning:" + result.payment_request;
    document.querySelector('#pay #qr').src = result.qrCode;
    
    startPollingPayment(result.payment_hash, 3000, function() {
      window.location.reload();
    });
  }

  function loading() {
    document.querySelector('.modal-footer').classList.remove('d-none');
  }

  function startQr() {
    loading();
    document.getElementById('qr-container').classList.remove('d-none');
  }

  function startWebLN() {  
    loading();
    weblnButton.disabled = true;
  }

  async function isPaid(payment_hash) {
    const response = await fetch('/invoice/' + payment_hash);
    const result = await response.json();
    return result.paid;
  }

  function startPollingPayment(payment_hash, timeout, onSuccess) {
      setTimeout(async function() {
        const result = await isPaid(payment_hash);

        if(!result) {
            startPollingPayment(payment_hash, timeout, onSuccess);
        } else {
          onSuccess();
        }
      }, timeout);
  }
  
  
  
</script>